{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amank\\\\Downloads\\\\podfinance\\\\mern-finance\\\\src\\\\components\\\\finance-list.component.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Bar, Line, Pie } from 'react-chartjs-2';\nimport { candel1 } from './candel1.js';\nimport { Chart, registerables } from 'chart.js';\nimport './desgin.css';\nimport { CandlestickController, CandlestickElement, OhlcElement } from 'chartjs-chart-financial';\nChart.register(...registerables);\nChart.register(CandlestickController, CandlestickElement, OhlcElement);\nconst FinanceList = () => {\n  _s();\n  const [chartData, setChartData] = useState(null);\n  const [filter, setFilter] = useState('all');\n  const [stockData, setStockData] = useState([]);\n  const [dateRange, setDateRange] = useState({\n    startDate: '',\n    endDate: ''\n  });\n  useEffect(() => {\n    fetchStockData();\n  }, []);\n  const fetchStockData = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/stocks');\n      const data = await response.json();\n      setStockData(data);\n      prepareChartData(data);\n    } catch (error) {\n      console.error('Error fetching stock data:', error);\n    }\n  };\n  const prepareChartData = stockData => {\n    let filteredData = stockData.filter(row => new Date(row.Date) <= new Date(\"2024-08-21\"));\n    console.log(filteredData);\n    if (!stockData || !Array.isArray(stockData)) {\n      console.error('Invalid stock data');\n      return;\n    }\n    if (filter == 'week') {\n      filteredData = stockData.filter(row => {\n        const date = new Date(row.Date);\n        const today = new Date(\"2024-08-29\");\n        const lastWeek = new Date(\"2024-08-21\");\n        console.log(\"week\");\n        return date >= lastWeek && date <= today;\n      });\n    } else if (filter == 'month') {\n      filteredData = stockData.filter(row => {\n        const date = new Date(row.Date);\n        const today = new Date(\"2024-08-29\");\n        const lastMonth = new Date(today);\n        lastMonth.setMonth(lastMonth.getMonth() - 1);\n        console.log(\"month\");\n        return date >= lastMonth && date <= today;\n      });\n    } else if (filter == 'year') {\n      filteredData = stockData.filter(row => {\n        const date = new Date(row.Date);\n        const today = new Date(\"2024-08-29\");\n        const lastYear = new Date(\"2023-08-21\");\n        console.log(\"year\");\n        return date >= lastYear && date <= today;\n      });\n    } else if (filter == 'custom') {\n      filteredData = stockData.filter(row => {\n        const date = new Date(row.Date);\n        return date >= new Date(dateRange.startDate) && date <= new Date(dateRange.endDate);\n      });\n    } else if (filter == 'all') {\n      filteredData = stockData.filter(row => {\n        const date = new Date(row.Date);\n        return date;\n      });\n    }\n    if (!filteredData || !Array.isArray(filteredData)) {\n      console.error('Invalid filtered data');\n      return;\n    }\n    const labels = filteredData.map(row => new Date(row.Date).toLocaleDateString());\n    const openPrices = filteredData.map(row => row.Open);\n    const closePrices = filteredData.map(row => row.Close);\n    const volumes = filteredData.map(row => row.Volume);\n    const barData = {\n      labels,\n      datasets: [{\n        label: 'Open Prices',\n        data: openPrices,\n        backgroundColor: 'rgba(75, 192, 192, 0.6)',\n        borderColor: 'rgba(75, 192, 192, 1)',\n        borderWidth: 1\n      }]\n    };\n    const lineData = {\n      labels,\n      datasets: [{\n        label: 'Close Prices',\n        data: closePrices,\n        fill: false,\n        backgroundColor: 'rgba(153, 102, 255, 0.6)',\n        borderColor: 'rgba(153, 102, 255, 1)'\n      }]\n    };\n    const totalVolume = volumes.reduce((acc, volume) => acc + volume, 0);\n    const volumePercentages = volumes.map(volume => volume / totalVolume * 100);\n    const pieData = {\n      labels,\n      datasets: [{\n        label: 'Volume Percentage',\n        data: volumePercentages,\n        backgroundColor: ['rgba(255, 99, 132, 0.6)', 'rgba(54, 162, 235, 0.6)', 'rgba(255, 206, 86, 0.6)', 'rgba(75, 192, 192, 0.6)', 'rgba(153, 102, 255, 0.6)']\n      }]\n    };\n    setChartData({\n      barData,\n      lineData,\n      pieData\n    });\n  };\n  const handleFilterChange = event => {\n    setFilter(event.target.value);\n    console.log(filter);\n    prepareChartData(stockData);\n  };\n  const handleDateChange = event => {\n    setDateRange({\n      ...dateRange,\n      [event.target.name]: event.target.value\n    });\n    prepareChartData(stockData);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }\n  }, \"Stock Data Charts\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginBottom: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    value: \"month\",\n    onClick: handleFilterChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 9\n    }\n  }, \"This Month\"), /*#__PURE__*/React.createElement(\"button\", {\n    value: \"week\",\n    onClick: handleFilterChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }\n  }, \"This Week\"), /*#__PURE__*/React.createElement(\"button\", {\n    value: \"year\",\n    onClick: handleFilterChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }\n  }, \"This Year\"), /*#__PURE__*/React.createElement(\"button\", {\n    value: \"custom\",\n    onClick: handleFilterChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }\n  }, \"Custom\"), /*#__PURE__*/React.createElement(\"button\", {\n    value: \"all\",\n    onClick: handleFilterChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }\n  }, \"All\"), filter === 'custom' && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    name: \"startDate\",\n    value: dateRange.startDate,\n    onChange: handleDateChange,\n    placeholder: \"Start Date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    name: \"endDate\",\n    value: dateRange.endDate,\n    onChange: handleDateChange,\n    placeholder: \"End Date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }\n  }))), chartData ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chart-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }\n  }, \"Bar Chart - Open Prices\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chart-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Bar, {\n    data: chartData.barData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 13\n    }\n  }, \"Line Chart - Close Prices\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chart-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Line, {\n    data: chartData.lineData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 13\n    }\n  }, \"Pie Chart - Volume Distribution\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chart-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Pie, {\n    data: chartData.pieData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 13\n    }\n  })) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 9\n    }\n  }, \"Loading chart data...\"));\n};\n_s(FinanceList, \"uxpDA43W2Q63oI174Gw4gV1g7I8=\");\n_c = FinanceList;\nexport default FinanceList;\nvar _c;\n$RefreshReg$(_c, \"FinanceList\");","map":{"version":3,"names":["React","useState","useEffect","Bar","Line","Pie","candel1","Chart","registerables","CandlestickController","CandlestickElement","OhlcElement","register","FinanceList","_s","chartData","setChartData","filter","setFilter","stockData","setStockData","dateRange","setDateRange","startDate","endDate","fetchStockData","response","fetch","data","json","prepareChartData","error","console","filteredData","row","Date","log","Array","isArray","date","today","lastWeek","lastMonth","setMonth","getMonth","lastYear","labels","map","toLocaleDateString","openPrices","Open","closePrices","Close","volumes","Volume","barData","datasets","label","backgroundColor","borderColor","borderWidth","lineData","fill","totalVolume","reduce","acc","volume","volumePercentages","pieData","handleFilterChange","event","target","value","handleDateChange","name","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","style","marginBottom","onClick","type","onChange","placeholder","className","_c","$RefreshReg$"],"sources":["C:/Users/amank/Downloads/podfinance/mern-finance/src/components/finance-list.component.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Bar, Line, Pie } from 'react-chartjs-2';\r\nimport {candel1} from'./candel1.js'\r\nimport { Chart, registerables } from 'chart.js';\r\nimport './desgin.css'\r\nimport { CandlestickController, CandlestickElement, OhlcElement } from 'chartjs-chart-financial';\r\nChart.register(...registerables);\r\nChart.register(CandlestickController, CandlestickElement, OhlcElement);\r\nconst FinanceList = () => {\r\n  const [chartData, setChartData] = useState(null);\r\n  const [filter, setFilter] = useState('all');\r\n  const [stockData, setStockData] = useState([]);\r\n  const [dateRange, setDateRange] = useState({\r\n    startDate: '',\r\n    endDate: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchStockData();\r\n  }, []);\r\n\r\n  const fetchStockData = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/stocks');\r\n      const data = await response.json();\r\n      setStockData(data);\r\n      prepareChartData(data);\r\n    } catch (error) {\r\n      console.error('Error fetching stock data:', error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const prepareChartData = (stockData) => {\r\n    \r\n   \r\n    let filteredData = stockData.filter((row) => new Date(row.Date) <= new Date(\"2024-08-21\"));\r\n\r\n    console.log(filteredData );\r\n    if (!stockData || !Array.isArray(stockData)) {\r\n      console.error('Invalid stock data');\r\n      return;\r\n    }\r\n    if (filter == 'week') {\r\n      filteredData = stockData.filter((row) => {\r\n        const date = new Date(row.Date);\r\n        const today = new Date(\"2024-08-29\");\r\n        const lastWeek = new Date(\"2024-08-21\");\r\n        console.log(\"week\");\r\n        \r\n        return date >= lastWeek && date <= today;\r\n\r\n        \r\n      });\r\n    } else if (filter == 'month') {\r\n      filteredData = stockData.filter((row) => {\r\n        const date = new Date(row.Date);\r\n        const today = new Date(\"2024-08-29\");\r\n        const lastMonth = new Date(today);\r\n        lastMonth.setMonth(lastMonth.getMonth() - 1);\r\n        console.log(\"month\");\r\n\r\n        return date >= lastMonth && date <= today;\r\n      });\r\n    } \r\n\r\n    \r\n    else if (filter == 'year') {\r\n      filteredData = stockData.filter((row) => {\r\n        const date = new Date(row.Date);\r\n        const today = new Date(\"2024-08-29\");\r\n        const lastYear = new Date(\"2023-08-21\");\r\n        console.log(\"year\");\r\n\r\n        return date >= lastYear && date <= today;\r\n      });\r\n    } else if (filter == 'custom') {\r\n      filteredData = stockData.filter((row) => {\r\n        const date = new Date(row.Date);\r\n        return date >= new Date(dateRange.startDate) && date <= new Date(dateRange.endDate);\r\n      });\r\n    }\r\n\r\n    else if (filter == 'all') {\r\n      filteredData = stockData.filter((row) => {\r\n        const date = new Date(row.Date);\r\n        return date;\r\n      });\r\n\r\n    }\r\n\r\n\r\n    \r\n \r\n    if (!filteredData || !Array.isArray(filteredData)) {\r\n      console.error('Invalid filtered data');\r\n      return;\r\n    }\r\n    const labels = filteredData.map((row) => new Date(row.Date).toLocaleDateString());\r\n    const openPrices = filteredData.map((row) => row.Open);\r\n    const closePrices = filteredData.map((row) => row.Close);\r\n    const volumes = filteredData.map((row) => row.Volume);\r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const barData = {\r\n      labels,\r\n      datasets: [\r\n        {\r\n          label: 'Open Prices',\r\n          data: openPrices,\r\n          backgroundColor: 'rgba(75, 192, 192, 0.6)',\r\n          borderColor: 'rgba(75, 192, 192, 1)',\r\n          borderWidth: 1,\r\n        },\r\n      ],\r\n    };\r\n\r\n    const lineData = {\r\n      labels,\r\n      datasets: [\r\n        {\r\n          label: 'Close Prices',\r\n          data: closePrices,\r\n          fill: false,\r\n          backgroundColor: 'rgba(153, 102, 255, 0.6)',\r\n          borderColor: 'rgba(153, 102, 255, 1)',\r\n        },\r\n      ],\r\n    };\r\n\r\n    const totalVolume = volumes.reduce((acc, volume) => acc + volume, 0);\r\n    const volumePercentages = volumes.map((volume) => (volume / totalVolume) * 100);\r\n\r\n    const pieData = {\r\n      labels,\r\n      datasets: [\r\n        {\r\n          label: 'Volume Percentage',\r\n          data: volumePercentages,\r\n          backgroundColor: [\r\n            'rgba(255, 99, 132, 0.6)',\r\n            'rgba(54, 162, 235, 0.6)',\r\n            'rgba(255, 206, 86, 0.6)',\r\n            'rgba(75, 192, 192, 0.6)',\r\n            'rgba(153, 102, 255, 0.6)',\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n\r\n    setChartData({ barData, lineData, pieData });\r\n  };\r\n\r\n\r\n  const handleFilterChange =  (event) => {\r\n    setFilter(event.target.value);\r\n    console.log(filter);\r\n    prepareChartData(stockData);\r\n  };\r\n\r\n  const handleDateChange =  (event) => {\r\n    setDateRange({\r\n      ...dateRange,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n   \r\n    prepareChartData(stockData);\r\n  };\r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h2>Stock Data Charts</h2>\r\n      <div style={{ marginBottom: 20 }}>\r\n        <button value=\"month\" onClick={handleFilterChange}>This Month</button>\r\n        <button value=\"week\" onClick={handleFilterChange}>This Week</button>\r\n        <button value=\"year\" onClick={handleFilterChange}>This Year</button>\r\n        <button value=\"custom\" onClick={handleFilterChange}>Custom</button>\r\n        <button value=\"all\" onClick={handleFilterChange}>All</button>\r\n\r\n  {filter === 'custom' && (\r\n    <div>\r\n      <input\r\n        type=\"date\"\r\n        name=\"startDate\"\r\n        value={dateRange.startDate}\r\n        onChange={handleDateChange}\r\n        placeholder=\"Start Date\"\r\n      />\r\n      <input\r\n        type=\"date\"\r\n        name=\"endDate\"\r\n        value={dateRange.endDate}\r\n        onChange={handleDateChange}\r\n        placeholder=\"End Date\"\r\n      />\r\n    </div>\r\n  )}\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n      {chartData ? (\r\n       \r\n          <div className='chart-wrapper' >\r\n            <div>\r\n            <h2>Bar Chart - Open Prices</h2>\r\n            <div className=\"chart-container\">\r\n              <Bar data={chartData.barData} />\r\n            </div>\r\n            </div>\r\n            <div>\r\n            <h2>Line Chart - Close Prices</h2>\r\n            <div className=\"chart-container\">\r\n              <Line data={chartData.lineData} />\r\n            </div>\r\n            </div><div>\r\n            <h2>Pie Chart - Volume Distribution</h2>\r\n            <div className=\"chart-container\">\r\n              <Pie data={chartData.pieData} />\r\n            </div>\r\n            </div>\r\n            <div>\r\n             \r\n              </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n          </div>\r\n       \r\n      ) : (\r\n        <p>Loading chart data...</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FinanceList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
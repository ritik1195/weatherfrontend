{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Bar,Line,Pie}from'react-chartjs-2';import{candel1}from'./candel1.js';import{Chart,registerables}from'chart.js';import'./desgin.css';import{CandlestickController,CandlestickElement,OhlcElement}from'chartjs-chart-financial';Chart.register(...registerables);Chart.register(CandlestickController,CandlestickElement,OhlcElement);const FinanceList=()=>{const[chartData,setChartData]=useState(null);const[filter,setFilter]=useState('all');const[stockData,setStockData]=useState([]);const[dateRange,setDateRange]=useState({startDate:'',endDate:''});useEffect(()=>{fetchStockData();},[]);const fetchStockData=async()=>{try{const response=await fetch('http://localhost:5000/stocks');const data=await response.json();setStockData(data);prepareChartData(data);}catch(error){console.error('Error fetching stock data:',error);}};const prepareChartData=stockData=>{let filteredData=stockData.filter(row=>new Date(row.Date)<=new Date(\"2024-08-21\"));console.log(filteredData);if(!stockData||!Array.isArray(stockData)){console.error('Invalid stock data');return;}if(filter=='week'){filteredData=stockData.filter(row=>{const date=new Date(row.Date);const today=new Date(\"2024-08-29\");const lastWeek=new Date(\"2024-08-21\");console.log(\"week\");return date>=lastWeek&&date<=today;});}else if(filter=='month'){filteredData=stockData.filter(row=>{const date=new Date(row.Date);const today=new Date(\"2024-08-29\");const lastMonth=new Date(today);lastMonth.setMonth(lastMonth.getMonth()-1);console.log(\"month\");return date>=lastMonth&&date<=today;});}else if(filter=='year'){filteredData=stockData.filter(row=>{const date=new Date(row.Date);const today=new Date(\"2024-08-29\");const lastYear=new Date(\"2023-08-21\");console.log(\"year\");return date>=lastYear&&date<=today;});}else if(filter=='custom'){filteredData=stockData.filter(row=>{const date=new Date(row.Date);return date>=new Date(dateRange.startDate)&&date<=new Date(dateRange.endDate);});}else if(filter=='all'){filteredData=stockData.filter(row=>{const date=new Date(row.Date);return date;});}if(!filteredData||!Array.isArray(filteredData)){console.error('Invalid filtered data');return;}const labels=filteredData.map(row=>new Date(row.Date).toLocaleDateString());const openPrices=filteredData.map(row=>row.Open);const closePrices=filteredData.map(row=>row.Close);const volumes=filteredData.map(row=>row.Volume);const barData={labels,datasets:[{label:'Open Prices',data:openPrices,backgroundColor:'rgba(75, 192, 192, 0.6)',borderColor:'rgba(75, 192, 192, 1)',borderWidth:1}]};const lineData={labels,datasets:[{label:'Close Prices',data:closePrices,fill:false,backgroundColor:'rgba(153, 102, 255, 0.6)',borderColor:'rgba(153, 102, 255, 1)'}]};const totalVolume=volumes.reduce((acc,volume)=>acc+volume,0);const volumePercentages=volumes.map(volume=>volume/totalVolume*100);const pieData={labels,datasets:[{label:'Volume Percentage',data:volumePercentages,backgroundColor:['rgba(255, 99, 132, 0.6)','rgba(54, 162, 235, 0.6)','rgba(255, 206, 86, 0.6)','rgba(75, 192, 192, 0.6)','rgba(153, 102, 255, 0.6)']}]};setChartData({barData,lineData,pieData});};const handleFilterChange=event=>{setFilter(event.target.value);console.log(filter);prepareChartData(stockData);};const handleDateChange=event=>{setDateRange({...dateRange,[event.target.name]:event.target.value});prepareChartData(stockData);};return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h4\",null,\"Double click to select filter\"),/*#__PURE__*/React.createElement(\"div\",{style:{marginBottom:20}},/*#__PURE__*/React.createElement(\"button\",{value:\"month\",onClick:handleFilterChange},\"This Month\"),/*#__PURE__*/React.createElement(\"button\",{value:\"week\",onClick:handleFilterChange},\"This Week\"),/*#__PURE__*/React.createElement(\"button\",{value:\"year\",onClick:handleFilterChange},\"This Year\"),/*#__PURE__*/React.createElement(\"button\",{value:\"custom\",onClick:handleFilterChange},\"Custom\"),/*#__PURE__*/React.createElement(\"button\",{value:\"all\",onClick:handleFilterChange},\"All\"),filter==='custom'&&/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"input\",{type:\"date\",name:\"startDate\",value:dateRange.startDate,onChange:handleDateChange,placeholder:\"Start Date\"}),/*#__PURE__*/React.createElement(\"input\",{type:\"date\",name:\"endDate\",value:dateRange.endDate,onChange:handleDateChange,placeholder:\"End Date\"}))),chartData?/*#__PURE__*/React.createElement(\"div\",{className:\"chart-wrapper\"},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h2\",null,\"Bar Chart - Open Prices\"),/*#__PURE__*/React.createElement(\"div\",{className:\"chart-container\"},/*#__PURE__*/React.createElement(Bar,{data:chartData.barData}))),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h2\",null,\"Line Chart - Close Prices\"),/*#__PURE__*/React.createElement(\"div\",{className:\"chart-container\"},/*#__PURE__*/React.createElement(Line,{data:chartData.lineData}))),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h2\",null,\"Pie Chart - Volume Distribution\"),/*#__PURE__*/React.createElement(\"div\",{className:\"chart-container\"},/*#__PURE__*/React.createElement(Pie,{data:chartData.pieData}))),/*#__PURE__*/React.createElement(\"div\",null)):/*#__PURE__*/React.createElement(\"p\",null,\"Loading chart data...\"));};export default FinanceList;","map":{"version":3,"names":["React","useState","useEffect","Bar","Line","Pie","candel1","Chart","registerables","CandlestickController","CandlestickElement","OhlcElement","register","FinanceList","chartData","setChartData","filter","setFilter","stockData","setStockData","dateRange","setDateRange","startDate","endDate","fetchStockData","response","fetch","data","json","prepareChartData","error","console","filteredData","row","Date","log","Array","isArray","date","today","lastWeek","lastMonth","setMonth","getMonth","lastYear","labels","map","toLocaleDateString","openPrices","Open","closePrices","Close","volumes","Volume","barData","datasets","label","backgroundColor","borderColor","borderWidth","lineData","fill","totalVolume","reduce","acc","volume","volumePercentages","pieData","handleFilterChange","event","target","value","handleDateChange","name","createElement","style","marginBottom","onClick","type","onChange","placeholder","className"],"sources":["C:/Users/amank/Downloads/podfinance/mern-finance/src/components/finance-list.component.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Bar, Line, Pie } from 'react-chartjs-2';\r\nimport {candel1} from'./candel1.js'\r\nimport { Chart, registerables } from 'chart.js';\r\nimport './desgin.css'\r\nimport { CandlestickController, CandlestickElement, OhlcElement } from 'chartjs-chart-financial';\r\nChart.register(...registerables);\r\nChart.register(CandlestickController, CandlestickElement, OhlcElement);\r\nconst FinanceList = () => {\r\n  const [chartData, setChartData] = useState(null);\r\n  const [filter, setFilter] = useState('all');\r\n  const [stockData, setStockData] = useState([]);\r\n  const [dateRange, setDateRange] = useState({\r\n    startDate: '',\r\n    endDate: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchStockData();\r\n  }, []);\r\n\r\n  const fetchStockData = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/stocks');\r\n      const data = await response.json();\r\n      setStockData(data);\r\n      prepareChartData(data);\r\n    } catch (error) {\r\n      console.error('Error fetching stock data:', error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const prepareChartData = (stockData) => {\r\n    \r\n   \r\n    let filteredData = stockData.filter((row) => new Date(row.Date) <= new Date(\"2024-08-21\"));\r\n\r\n    console.log(filteredData );\r\n    if (!stockData || !Array.isArray(stockData)) {\r\n      console.error('Invalid stock data');\r\n      return;\r\n    }\r\n    if (filter == 'week') {\r\n      filteredData = stockData.filter((row) => {\r\n        const date = new Date(row.Date);\r\n        const today = new Date(\"2024-08-29\");\r\n        const lastWeek = new Date(\"2024-08-21\");\r\n        console.log(\"week\");\r\n        \r\n        return date >= lastWeek && date <= today;\r\n\r\n        \r\n      });\r\n    } else if (filter == 'month') {\r\n      filteredData = stockData.filter((row) => {\r\n        const date = new Date(row.Date);\r\n        const today = new Date(\"2024-08-29\");\r\n        const lastMonth = new Date(today);\r\n        lastMonth.setMonth(lastMonth.getMonth() - 1);\r\n        console.log(\"month\");\r\n\r\n        return date >= lastMonth && date <= today;\r\n      });\r\n    } \r\n\r\n    \r\n    else if (filter == 'year') {\r\n      filteredData = stockData.filter((row) => {\r\n        const date = new Date(row.Date);\r\n        const today = new Date(\"2024-08-29\");\r\n        const lastYear = new Date(\"2023-08-21\");\r\n        console.log(\"year\");\r\n\r\n        return date >= lastYear && date <= today;\r\n      });\r\n    } else if (filter == 'custom') {\r\n      filteredData = stockData.filter((row) => {\r\n        const date = new Date(row.Date);\r\n        return date >= new Date(dateRange.startDate) && date <= new Date(dateRange.endDate);\r\n      });\r\n    }\r\n\r\n    else if (filter == 'all') {\r\n      filteredData = stockData.filter((row) => {\r\n        const date = new Date(row.Date);\r\n        return date;\r\n      });\r\n\r\n    }\r\n\r\n\r\n    \r\n \r\n    if (!filteredData || !Array.isArray(filteredData)) {\r\n      console.error('Invalid filtered data');\r\n      return;\r\n    }\r\n    const labels = filteredData.map((row) => new Date(row.Date).toLocaleDateString());\r\n    const openPrices = filteredData.map((row) => row.Open);\r\n    const closePrices = filteredData.map((row) => row.Close);\r\n    const volumes = filteredData.map((row) => row.Volume);\r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const barData = {\r\n      labels,\r\n      datasets: [\r\n        {\r\n          label: 'Open Prices',\r\n          data: openPrices,\r\n          backgroundColor: 'rgba(75, 192, 192, 0.6)',\r\n          borderColor: 'rgba(75, 192, 192, 1)',\r\n          borderWidth: 1,\r\n        },\r\n      ],\r\n    };\r\n\r\n    const lineData = {\r\n      labels,\r\n      datasets: [\r\n        {\r\n          label: 'Close Prices',\r\n          data: closePrices,\r\n          fill: false,\r\n          backgroundColor: 'rgba(153, 102, 255, 0.6)',\r\n          borderColor: 'rgba(153, 102, 255, 1)',\r\n        },\r\n      ],\r\n    };\r\n\r\n    const totalVolume = volumes.reduce((acc, volume) => acc + volume, 0);\r\n    const volumePercentages = volumes.map((volume) => (volume / totalVolume) * 100);\r\n\r\n    const pieData = {\r\n      labels,\r\n      datasets: [\r\n        {\r\n          label: 'Volume Percentage',\r\n          data: volumePercentages,\r\n          backgroundColor: [\r\n            'rgba(255, 99, 132, 0.6)',\r\n            'rgba(54, 162, 235, 0.6)',\r\n            'rgba(255, 206, 86, 0.6)',\r\n            'rgba(75, 192, 192, 0.6)',\r\n            'rgba(153, 102, 255, 0.6)',\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n\r\n    setChartData({ barData, lineData, pieData });\r\n  };\r\n\r\n\r\n  const handleFilterChange =  (event) => {\r\n    setFilter(event.target.value);\r\n    console.log(filter);\r\n    prepareChartData(stockData);\r\n  };\r\n\r\n  const handleDateChange =  (event) => {\r\n    setDateRange({\r\n      ...dateRange,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n   \r\n    prepareChartData(stockData);\r\n  };\r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h4>Double click to select filter</h4>\r\n      <div style={{ marginBottom: 20 }}>\r\n        <button value=\"month\" onClick={handleFilterChange}>This Month</button>\r\n        <button value=\"week\" onClick={handleFilterChange}>This Week</button>\r\n        <button value=\"year\" onClick={handleFilterChange}>This Year</button>\r\n        <button value=\"custom\" onClick={handleFilterChange}>Custom</button>\r\n        <button value=\"all\" onClick={handleFilterChange}>All</button>\r\n\r\n  {filter === 'custom' && (\r\n    <div>\r\n      <input\r\n        type=\"date\"\r\n        name=\"startDate\"\r\n        value={dateRange.startDate}\r\n        onChange={handleDateChange}\r\n        placeholder=\"Start Date\"\r\n      />\r\n      <input\r\n        type=\"date\"\r\n        name=\"endDate\"\r\n        value={dateRange.endDate}\r\n        onChange={handleDateChange}\r\n        placeholder=\"End Date\"\r\n      />\r\n    </div>\r\n  )}\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n      {chartData ? (\r\n       \r\n          <div className='chart-wrapper' >\r\n            <div>\r\n            <h2>Bar Chart - Open Prices</h2>\r\n            <div className=\"chart-container\">\r\n              <Bar data={chartData.barData} />\r\n            </div>\r\n            </div>\r\n            <div>\r\n            <h2>Line Chart - Close Prices</h2>\r\n            <div className=\"chart-container\">\r\n              <Line data={chartData.lineData} />\r\n            </div>\r\n            </div><div>\r\n            <h2>Pie Chart - Volume Distribution</h2>\r\n            <div className=\"chart-container\">\r\n              <Pie data={chartData.pieData} />\r\n            </div>\r\n            </div>\r\n            <div>\r\n             \r\n              </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n          </div>\r\n       \r\n      ) : (\r\n        <p>Loading chart data...</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FinanceList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
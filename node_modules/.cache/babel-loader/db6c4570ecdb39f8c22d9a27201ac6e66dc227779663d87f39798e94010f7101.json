{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amank\\\\Downloads\\\\New folder\\\\podfinance - Copy\\\\mern-finance\\\\src\\\\components\\\\finance-list.component.js\",\n  _s = $RefreshSig$();\nimport { data } from 'autoprefixer';\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nconst WeatherApp = () => {\n  _s();\n  const [weatherData, setWeatherData] = useState(null);\n  const [weatherSummary, setWeatherSummary] = useState([]);\n  const [temperatureThreshold, setTemperatureThreshold] = useState(35); // Example threshold\n  const [alertTriggered, setAlertTriggered] = useState(false);\n  const labels = useEffect(() => {\n    fetchWeatherData();\n  }, []);\n  const fetchWeatherData = async () => {\n    try {\n      const response = await fetch('https://api.openweathermap.org/data/2.5/weather?q=London&appid=485bc00cbf8fd5eb3dc717143b834c52'); // Replace with your API\n      const data = await response.json();\n      setWeatherData(data);\n      const dailySummary = calculateDailySummary(data);\n      setWeatherSummary([dailySummary]);\n      console.log(dailySummary);\n    } catch (error) {\n      console.error('Error fetching weather data:', error);\n    }\n  };\n  useEffect(() => {\n    if (weatherData && weatherData.main.temp > temperatureThreshold) {\n      setAlertTriggered(true);\n      console.log(`Alert! Temperature exceeded ${temperatureThreshold}째C.`);\n    }\n  }, [weatherData, temperatureThreshold]);\n  const calculateDailySummary = weatherData => {\n    return {\n      date: new Date(weatherData.dt * 1000).toLocaleDateString(),\n      avgTemp: weatherData.main.temp,\n      maxTemp: weatherData.main.temp_max,\n      minTemp: weatherData.main.temp_min,\n      dominantCondition: weatherData.weather[0].main\n    };\n  };\n  const lineChartData = {\n    labels: ['date', 'avgTemp', 'maxTemp', 'minTemp', 'dominantCondition'],\n    datasets: [{\n      label: 'Average Temperature (째C)',\n      data: dailySummary,\n      backgroundColor: 'rgba(75, 192, 192, 0.6)',\n      borderColor: 'rgba(75, 192, 192, 1)',\n      fill: false\n    }]\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, \"Weather App\"), alertTriggered && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 26\n    }\n  }, \"Alert! Temperature exceeded threshold.\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Line, {\n    data: lineChartData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  })));\n};\n_s(WeatherApp, \"z3ayYXcOrKsK93xoq3bINf8z6cI=\");\n_c = WeatherApp;\nexport default WeatherApp;\nvar _c;\n$RefreshReg$(_c, \"WeatherApp\");","map":{"version":3,"names":["data","React","useState","useEffect","Line","WeatherApp","_s","weatherData","setWeatherData","weatherSummary","setWeatherSummary","temperatureThreshold","setTemperatureThreshold","alertTriggered","setAlertTriggered","labels","fetchWeatherData","response","fetch","json","dailySummary","calculateDailySummary","console","log","error","main","temp","date","Date","dt","toLocaleDateString","avgTemp","maxTemp","temp_max","minTemp","temp_min","dominantCondition","weather","lineChartData","datasets","label","backgroundColor","borderColor","fill","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/amank/Downloads/New folder/podfinance - Copy/mern-finance/src/components/finance-list.component.js"],"sourcesContent":["import { data } from 'autoprefixer';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nconst WeatherApp = () => {\r\n  const [weatherData, setWeatherData] = useState(null);\r\n  const [weatherSummary, setWeatherSummary] = useState([]);\r\n  const [temperatureThreshold, setTemperatureThreshold] = useState(35); // Example threshold\r\n  const [alertTriggered, setAlertTriggered] = useState(false);\r\n  const labels=\r\n  useEffect(() => {\r\n    fetchWeatherData();\r\n  }, []);\r\n\r\n  const fetchWeatherData = async () => {\r\n    try {\r\n      const response = await fetch('https://api.openweathermap.org/data/2.5/weather?q=London&appid=485bc00cbf8fd5eb3dc717143b834c52'); // Replace with your API\r\n      const data = await response.json();\r\n      setWeatherData(data);\r\n      const dailySummary = calculateDailySummary(data);\r\n      setWeatherSummary([dailySummary]);\r\n      \r\n       console.log(dailySummary);\r\n    } catch (error) {\r\n      console.error('Error fetching weather data:', error);\r\n    }\r\n   \r\n  };\r\n\r\n  useEffect(() => {\r\n    if (weatherData && weatherData.main.temp > temperatureThreshold) {\r\n      setAlertTriggered(true);\r\n      console.log(`Alert! Temperature exceeded ${temperatureThreshold}째C.`);\r\n    }\r\n  }, [weatherData, temperatureThreshold]);\r\n\r\n  const calculateDailySummary = (weatherData) => {\r\n    return {\r\n      date: new Date(weatherData.dt * 1000).toLocaleDateString(),\r\n      avgTemp: weatherData.main.temp,\r\n      maxTemp: weatherData.main.temp_max,\r\n      minTemp: weatherData.main.temp_min,\r\n      dominantCondition: weatherData.weather[0].main,\r\n    };\r\n  };\r\n\r\n  const lineChartData = {\r\n    labels:['date' ,'avgTemp','maxTemp','minTemp','dominantCondition'] ,\r\n    datasets: [\r\n      {\r\n        label: 'Average Temperature (째C)',\r\n        data: dailySummary,\r\n        backgroundColor: 'rgba(75, 192, 192, 0.6)',\r\n        borderColor: 'rgba(75, 192, 192, 1)',\r\n        fill: false,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Weather App</h1>\r\n      {alertTriggered && <p>Alert! Temperature exceeded threshold.</p>}\r\n      <div>\r\n      <Line data={lineChartData} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherApp;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}